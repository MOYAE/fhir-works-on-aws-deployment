#
#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#  SPDX-License-Identifier: Apache-2.0
#

name: Unit Tests, Deploy, Integration Test
on:
  push:
    branches:
      - rel-subs-fix-tests
jobs:
  build-validate:
    name: Build and validate
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Install dependencies
        run: |
          cd auditLogMover
          yarn install
          cd ..
          yarn install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Build, lint, and run unit tests
        run: |
          cd auditLogMover
          yarn release
          cd ..
          yarn release
      - name: Build Hapi validator
        run: |
          cd javaHapiValidatorLambda
          mvn --batch-mode --update-snapshots --no-transfer-progress clean install
          cd ..
  pre-deployment-check:
    needs: build-validate
    runs-on: ubuntu-18.04
    timeout-minutes: 10
    steps:
      - name: 'Block Concurrent Deployments'
        uses: softprops/turnstyle@v1
        with:
          poll-interval-seconds: 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  deploy:
    needs: pre-deployment-check
    name: Deploy to Dev - enableMultiTenancy=${{ matrix.enableMultiTenancy }}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        include:
          - enableMultiTenancy: false
            region: us-west-2
          - enableMultiTenancy: true
            region: us-west-1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Setup config file
        env:
          DEV_AWS_USER_ACCOUNT_ARN: ${{ secrets.DEV_AWS_USER_ACCOUNT_ARN }}
        run: sed "s#<dev-arn>#$DEV_AWS_USER_ACCOUNT_ARN#g" serverless_config.template.json > serverless_config.json
      - name: Install npm dependencies
        run: yarn install
      - name: Download US Core IG
        # NOTE if updating the IG version. Please see update implementationGuides.test.ts test too.
        run: |
          mkdir -p implementationGuides
          curl http://hl7.org/fhir/us/core/STU3.1.1/package.tgz | tar xz -C implementationGuides
      - name: Compile IGs
        run: yarn run compile-igs
      - name: Setup allowList for Subscriptions integ tests
        run: cp integration-tests/infrastructure/allowList-integTests.ts src/subscriptions/allowList.ts
      - name: Install serverless
        run: npm install -g serverless@2.64.1
      - name: Deploy Hapi validator
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd javaHapiValidatorLambda
          mvn --batch-mode --update-snapshots --no-transfer-progress clean install
          serverless deploy --stage dev --region ${{ matrix.region }} --conceal
          cd ..
      - name: Deploy FHIR Server and ddbToEs
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          serverless deploy --stage dev --region ${{ matrix.region }} --useHapiValidator true --enableMultiTenancy ${{ matrix.enableMultiTenancy }} --conceal
      - name: Deploy auditLogMover
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd auditLogMover
          yarn install
          serverless deploy --stage dev --region ${{ matrix.region }} --conceal
  custom-integration-tests:
    needs: deploy
    name: Run custom integration tests - enableMultiTenancy=${{ matrix.enableMultiTenancy }}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        include:
          - enableMultiTenancy: false
            region: us-west-2
            serviceUrlSecretName: SERVICE_URL
            cognitoClientIdSecretName: COGNITO_CLIENT_ID
            apiKeySecretName: API_KEY
            subscriptionsNotificationsTableSecretName: SUBSCRIPTIONS_NOTIFICATIONS_TABLE
            subscriptionsEndpointSecretName: SUBSCRIPTIONS_ENDPOINT
            subscriptionsApiKeySecretName: SUBSCRIPTIONS_API_KEY
          - enableMultiTenancy: true
            region: us-west-1
            serviceUrlSecretName: MULTITENANCY_SERVICE_URL
            cognitoClientIdSecretName: MULTITENANCY_COGNITO_CLIENT_ID
            apiKeySecretName: MULTITENANCY_API_KEY
            subscriptionsNotificationsTableSecretName: MULTITENANCY_SUBSCRIPTIONS_NOTIFICATIONS_TABLE
            subscriptionsEndpointSecretName: MULTITENANCY_SUBSCRIPTIONS_ENDPOINT
            subscriptionsApiKeySecretName: MULTITENANCY_SUBSCRIPTIONS_API_KEY
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: |
          yarn install
      - name: Execute tests
        env:
          API_URL: ${{ secrets[matrix.serviceUrlSecretName] }}
          API_KEY: ${{ secrets[matrix.apiKeySecretName] }}
          API_AWS_REGION: ${{ matrix.region }}
          COGNITO_CLIENT_ID: ${{ secrets[matrix.cognitoClientIdSecretName] }}
          COGNITO_USERNAME_PRACTITIONER: ${{ secrets.COGNITO_USERNAME_PRACTITIONER }}
          COGNITO_USERNAME_AUDITOR: ${{ secrets.COGNITO_USERNAME_AUDITOR }}
          COGNITO_USERNAME_PRACTITIONER_ANOTHER_TENANT: ${{ secrets.COGNITO_USERNAME_PRACTITIONER_ANOTHER_TENANT }}
          COGNITO_PASSWORD: ${{ secrets.COGNITO_PASSWORD }}
          MULTI_TENANCY_ENABLED: ${{ matrix.enableMultiTenancy }}
          SUBSCRIPTIONS_ENABLED: 'true'
          SUBSCRIPTIONS_NOTIFICATIONS_TABLE: ${{ secrets[matrix.subscriptionsNotificationsTableSecretName] }}
          SUBSCRIPTIONS_ENDPOINT: ${{ secrets[matrix.subscriptionsEndpointSecretName] }}
          SUBSCRIPTIONS_API_KEY: ${{ secrets[matrix.subscriptionsApiKeySecretName] }}
        run: yarn int-test
