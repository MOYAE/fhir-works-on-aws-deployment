#
#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#  SPDX-License-Identifier: Apache-2.0
#

service: fhir-service-validator-ig

plugins:
  - serverless-s3-sync

custom:
  stage: ${opt:stage, self:provider.stage}
  fhirVersion: ${opt:fhirVersion, '4.0.1'}
  region: ${opt:region, self:provider.region}
  s3Sync:
    - bucketNameKey: ImplementationGuidesBucketNameKey
      localDir: ../../implementationGuides
      deleteRemoved: true

provider:
  name: aws
  region: us-west-2
  stage: dev
  runtime: java11
  logRetentionInDays: 3653 # 10 years
  stackTags:
    FHIR_SERVICE: 'fhir-service-validator-ig-${self:custom.region}-${self:custom.stage}'
  tracing:
    lambda: true

resources:
  - Outputs:
      ImplementationGuidesBucketNameKey:
        Value: !Ref ImplementationGuidesBucket
        Export:
          Name: ImplementationGuidesBucketNameKey
  - Resources:
      ImplementationGuidesBucket:
        Type: AWS::S3::Bucket
        Properties:
          BucketEncryption:
            ServerSideEncryptionConfiguration:
              - ServerSideEncryptionByDefault:
                  SSEAlgorithm: AES256
          PublicAccessBlockConfiguration:
            BlockPublicAcls: true
            BlockPublicPolicy: true
            IgnorePublicAcls: true
            RestrictPublicBuckets: true
      ImplementationGuidesBucketHttpsOnlyPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
          Bucket: !Ref ImplementationGuidesBucket
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: AllowSSLRequestsOnly
                Effect: Deny
                Principal: '*'
                Action:
                  - s3:*
                Resource:
                  - !GetAtt ImplementationGuidesBucket.Arn
                  - !Join ['', [!GetAtt ImplementationGuidesBucket.Arn, '/*']]
                Condition:
                  Bool:
                    'aws:SecureTransport': false
      IGBucketLambdaAllowPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
          Bucket: !Ref ImplementationGuidesBucket
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: "LambdaUploadAllowPolicy"
                Effect: "Allow"
                Principal:
                  Service: 'lambda.amazonaws.com'
                Action:
                  - "s3:*"
                Resource:
                  - !GetAtt ImplementationGuidesBucket.Arn
                  - !Join ['', [!GetAtt ImplementationGuidesBucket.Arn, '/*']]
      UploadImplementationGuidesLambdaRole:
        Type: AWS::IAM::Role
        Properties:
          AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Principal:
                  Service:
                    - lambda.amazonaws.com
                Action:
                  - sts:AssumeRole
          ManagedPolicyArns:
            - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
            - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
          Policies:
            - PolicyName: s3Access
              PolicyDocument:
                Version: '2012-10-17'
                Statement:
                  - Effect: Allow
                    Action:
                      - "s3:PutObject"
                      - "s3:GetObject"
                      - "s3:CreateBucket"
                      - "s3:ListBucket"
                      - "s3:ListObjects"
                    Resource:
                      - !Join ['', ['arn:aws:s3:::', !Ref ImplementationGuidesBucket, '/*']]
                      - !Join ['', ['arn:aws:s3:::', !Ref ImplementationGuidesBucket]]